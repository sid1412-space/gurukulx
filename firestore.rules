
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check for the specific admin email. This is less secure than custom claims but works for this context.
      return request.auth != null && request.auth.token.email == 'gurukulxconnect@yahoo.com';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isTutor() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'tutor';
    }
    
    function isStudent() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    // Admins can do anything.
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // USERS collection rules
    match /users/{userId} {
      // Anyone can query the user list to find tutors. This is safe because other rules prevent access to sensitive fields.
      allow list, read: if request.auth != null;
      
      // Users can create their own account.
      allow create: if request.auth != null;

      // Users can only update or delete their own profile.
      allow update, delete: if isOwner(userId);
    }

    // RECHARGE REQUESTS collection rules
    match /rechargeRequests/{requestId} {
      allow create: if isStudent();
      // Admin only for read/update
      allow read, update: if isAdmin();
    }

    // PAYOUT REQUESTS collection rules
    match /payoutRequests/{requestId} {
      allow create: if isTutor();
      // Admin only for read/update
      allow read, update: if isAdmin();
    }
    
    // PAYOUTS collection rules
     match /payouts/{payoutId} {
      // Tutors can read their own payout history
      allow read: if isTutor() && isOwner(resource.data.tutorId);
       // Admin only for write
      allow write: if isAdmin();
    }

    // SESSION REQUESTS collection rules
    match /sessionRequests/{requestId} {
      // Students create requests
      allow create: if isStudent(); 
      // Students can read/delete their own requests
      allow read, delete: if isOwner(request.resource.data.studentId);
      // Tutors can read/update the requests sent to them
      allow read, update: if isOwner(request.resource.data.tutorId); 
    }
  }
}
