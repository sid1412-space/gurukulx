rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
        return isAuth() && request.auth.token.email == 'gurukulxconnect@yahoo.com';
    }

    // USERS collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Any authenticated user can read any user document (for profiles, listings)
      // A user can update their own document
      allow read, write: if isAdmin();
      allow read: if isAuth();
      allow update: if isUser(userId);
    }
    
    // SESSIONS collection
    match /sessions/{sessionId} {
       // Admins can manage all sessions
       // Users can read/write their own session documents
       allow read, write: if isAdmin();
       allow read, create: if isAuth();
       allow update: if isAuth() && (resource.data.studentId == request.auth.uid || resource.data.tutorId == request.auth.uid);
    }

    // RECHARGE REQUESTS collection
    match /rechargeRequests/{rechargeId} {
        // Admins can manage all recharge requests
        // Students can create their own recharge requests
        allow read, write: if isAdmin();
        allow create: if isAuth();
    }
    
    // PAYOUT REQUESTS collection
    match /payoutRequests/{payoutRequestId} {
        // Admins can manage all payout requests
        // Tutors can create their own payout requests
        allow read, write: if isAdmin();
        allow create: if isAuth();
    }
    
    // PAYOUTS collection
    match /payouts/{payoutId} {
       // Admins can create and read all payouts
       // Tutors can read their own payouts
       allow read, write: if isAdmin();
       allow read: if isAuth();
    }

    // SESSION REQUESTS collection
    match /sessionRequests/{requestId} {
        // Admins can read all requests
        // Tutors and Students involved can read/write/delete their requests
        allow read, write, delete: if isAdmin() || (isAuth() && (resource.data.studentId == request.auth.uid || resource.data.tutorId == request.auth.uid));
        allow create: if isAuth();
    }
  }
}
