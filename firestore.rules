
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'gurukulxconnect@yahoo.com';
    }

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Admins can do anything
      allow read, write: if isAdmin();
      
      // Any authenticated user can list/read user profiles (for tutor search, etc.)
      allow list, get: if isAuthenticated();

      // Users can only update their own document
      allow update: if isOwner(userId);
    }

    match /sessionRequests/{requestId} {
      // Admins can do anything
      allow read, write: if isAdmin();

      // Students can create their own requests
      allow create: if isOwner(request.resource.data.studentId);
      
      // Tutors can update (accept) requests assigned to them
      allow update: if isOwner(resource.data.tutorId);

      // Students (who created it) or Tutors (assigned to it) can read or delete
      allow get, delete: if isOwner(resource.data.studentId) || isOwner(resource.data.tutorId);
    }

    match /sessions/{sessionId} {
        // Admins can do anything
        allow read, write: if isAdmin();
    
        // Students and Tutors involved in the session can read it
        allow list, get: if isAuthenticated() && (resource.data.studentId == request.auth.uid || resource.data.tutorId == request.auth.uid);
        
        // Students can update their own sessions (for ratings)
        allow update: if isOwner(resource.data.studentId);
        
        // Students can create sessions (this is done server-side logic in-app)
        allow create: if isOwner(request.resource.data.studentId);
    }

    match /rechargeRequests/{rechargeId} {
        // Admins can do anything
        allow read, write: if isAdmin();

        // Students can create their own recharge requests
        allow create: if isOwner(request.resource.data.studentId);
    }

    match /payoutRequests/{payoutRequestId} {
        // Admins can do anything
        allow read, write: if isAdmin();

        // Tutors can create their own payout requests
        allow create: if isOwner(request.resource.data.tutorId);
    }
     match /payouts/{payoutId} {
        // Admins can do anything
        allow read, write: if isAdmin();

        // Tutors can read their own payout history
        allow get, list: if isOwner(resource.data.tutorId);
    }
  }
}
